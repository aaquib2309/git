# git revert 
> the revert command helps you to undo the existing commit
> it does not delete any data in the process, instead rather git creates new commit with the included files reverted to their previous  
  state. so you version control history moves forward while the state of your file moves backward.
> go to the git workspace 
> cat > newfile
  final code for app
> git add .
> git commit -m "code commited"
> cat >> file1
  adding file to get revert
  and doing the lab
> git add .
> git log --oneline
> git revert (commit-id)

ec2-singapore
> git status
> git log
> cat > revertfile
revert test code
> git add .
> git commit -m "revert test "

> cat >> revertfile 
bad commit
> git add .
> git commit -m "bad file commites"
> git log
> git revert 120ed04ff34d7
Revert "wrong commit" (ignore this commit)
> cat revertfile :- old code is showing new code disappear
> git log --oneline :- 95495d4 (HEAD -> master) Revert "wrong commit" (ignore this commit)

# revert
> git reset --hard HEAD~3
> git reset soft HEAD~1
